{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lex\\\\react-course\\\\React\\\\react-fetch-app\\\\src\\\\components\\\\randomChar\\\\randomChar.js\";\nimport React, { Component } from 'react';\nimport './randomChar.css';\nimport gotService from \"../../services/gotService\";\nimport Spinner from \"../spinner\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\nimport ErrorMessage from \"../errorMessage\";\nexport default class RandomChar extends Component {\n  constructor(props) {\n    super(props);\n    this.gotService = new gotService();\n    this.state = {\n      char: {},\n      loading: true\n    };\n\n    this.onCharLoaded = char => {\n      this.setState({\n        char,\n        loading: false,\n        error: false\n      });\n    };\n\n    this.onError = err => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n\n    this.updateChar();\n  }\n\n  updateChar() {\n    const id = Math.floor(Math.random() * 140 + 25);\n    this.gotService.getCharacters(id).then(this.onCharLoaded).catch(this.onError);\n  }\n\n  render() {\n    const _this$state = this.state,\n          char = _this$state.char,\n          loading = _this$state.loading,\n          error = _this$state.error;\n    const errorMessage = error ? React.createElement(ErrorMessage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }) : content;\n    const content = loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }) : React.createElement(View, {\n      char: char,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: \"random-block rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nconst View = ({\n  char\n}) => {\n  const name = char.name,\n        gender = char.gender,\n        born = char.born,\n        died = char.died,\n        culture = char.culture;\n  return React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Random Character: \", name), React.createElement(ListGroup, {\n    className: \"list-group-flush\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(ListGroupItem, {\n    className: \"d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Gender \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, gender)), React.createElement(ListGroupItem, {\n    className: \"d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Born \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, born)), React.createElement(ListGroupItem, {\n    className: \"d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Died \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, died)), React.createElement(ListGroupItem, {\n    className: \"d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Culture \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, culture))));\n};","map":{"version":3,"sources":["C:/Users/Lex/react-course/React/react-fetch-app/src/components/randomChar/randomChar.js"],"names":["React","Component","gotService","Spinner","ListGroup","ListGroupItem","ErrorMessage","RandomChar","constructor","props","state","char","loading","onCharLoaded","setState","error","onError","err","updateChar","id","Math","floor","random","getCharacters","then","catch","render","errorMessage","content","View","name","gender","born","died","culture"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport './randomChar.css'\nimport gotService from \"../../services/gotService\";\nimport Spinner from \"../spinner\";\nimport {ListGroup, ListGroupItem} from \"reactstrap\";\n    import ErrorMessage from \"../errorMessage\";\n\n    export default class RandomChar extends Component {\n        gotService = new gotService();\n        state = {\n            char: {},\n            loading: true\n        };\n\n        constructor(props) {\n            super(props);\n            this.updateChar()\n        }\n\n        onCharLoaded = (char) => {\n            this.setState({\n                char,\n                loading: false,\n                error: false\n            })\n        };\n\n        onError = (err) => {\n            this.setState({\n                error: true,\n                loading: false\n            })\n        };\n\n        updateChar() {\n            const id = Math.floor(Math.random() * 140 + 25);\n            this.gotService.getCharacters(id)\n              .then(this.onCharLoaded)\n              .catch(this.onError)\n        }\n\n\n        render() {\n            const {char, loading, error} = this.state;\n\n            const errorMessage = error ? <ErrorMessage/> : content;\n            const content = loading ? <Spinner/> : <View char={char}/>;\n\n            return (\n              <div className=\"random-block rounded\">\n                  {content}\n              </div>\n            );\n        }\n    }\n\n    const View = ({char}) => {\n        const {name, gender, born, died, culture} = char;\n        return (\n          <>\n              <h4>Random Character: {name}</h4>\n              <ListGroup className=\"list-group-flush\">\n                  <ListGroupItem className=\"d-flex justify-content-between\">\n                      <span className=\"term\">Gender </span>\n                      <span>{gender}</span>\n                  </ListGroupItem>\n                  <ListGroupItem className=\"d-flex justify-content-between\">\n                      <span className=\"term\">Born </span>\n                      <span>{born}</span>\n                  </ListGroupItem>\n                  <ListGroupItem className=\"d-flex justify-content-between\">\n                      <span className=\"term\">Died </span>\n                      <span>{died}</span>\n                  </ListGroupItem>\n                  <ListGroupItem className=\"d-flex justify-content-between\">\n                      <span className=\"term\">Culture </span>\n                      <span>{culture}</span>\n                  </ListGroupItem>\n              </ListGroup>\n          </>\n        )\n    };"]},"metadata":{},"sourceType":"module"}